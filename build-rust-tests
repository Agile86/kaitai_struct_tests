#!/bin/bash -e

. ./config

LANG=rust
LANG_EXT=rs

# existing tests
EXIST_TESTS_DIR="spec/$LANG/tests"

# kst-file for test generation
KS_DIR="spec/ks"

# formats dir
FORMATS_DIR=$FORMATS_KSY_DIR

# build compiler
pushd $COMPILER_DIR
sbt publishLocal
popd

# generate tests only for exist formats only
# ksy -> rs
# but also check if correspond kst-file exist
FORMATS=
FORMATS_ONLY_RUST=
KEEPING_TESTS=
for fn in $FORMATS_DIR/*; do
	f=$(basename -- ${fn%%.*})

	# regenerate tests only if there no such test exist
	if [ ! -f "$EXIST_TESTS_DIR/test_$f.$LANG_EXT" ]; then
	    if [ -f "$KS_DIR/$f.kst" ]; then
			FORMATS_FILES="${FORMATS_FILES} $f"
	    else
			FORMATS_FILES_ONLY_RUST="${FORMATS_FILES_ONLY_RUST} $f"
	    fi
	else
		KEEPING_TESTS="${KEEPING_TESTS} test_$f.$LANG_EXT"
	fi
done

if [ ! -z "$KEEPING_TESTS" ]; then
	echo "Keeping (edited) tests: $KEEPING_TESTS"
fi

if [ -z "$FORMATS_FILES" ]; then
	echo "No new tests were generated."
	echo "Please delete selected (or all) tests (test_*.$LANG_EXT) from $EXIST_TESTS_DIR."
	echo "And rerun this script to make a new."
else
    echo generating tests for $LANG:
	echo $FORMATS_FILES

	./spec_kst_to_all -f ../$EXIST_TESTS_DIR -t $LANG $FORMATS_FILES
fi

# check for manual tests
if [ ! -z "$FORMATS_FILES_ONLY_RUST" ]; then
	echo
	echo "!!! This tests exist only for rust (manual tests):"
	for f in ${FORMATS_FILES_ONLY_RUST[*]}; do
		if ! [ -f "$EXIST_TESTS_DIR/manual_$f.$LANG_EXT" ]; then
			echo "!!! $FORMATS_DIR/$f.ksy detected without correspond kst-file, please put manual test $EXIST_TESTS_DIR/manual_$f.$LANG_EXT"
		else
			echo "$EXIST_TESTS_DIR/manual_$f.$LANG_EXT"
		fi
	done
	echo "!!! Please, update them manually !!!"
	echo
fi
