#!/bin/sh -ef

. ./config

TESTS_DIR="$(pwd)"

print_usage()
{
	cat <<EOF
$0 [--shell] [--download] --target {TARGET} --implementation {IMPLEMENTATION} [--os {OS}] [--arch {ARCH}]"

Runs Kaitai Struct CI for a specific target and implementation in a
Docker container using image that guarantees to have all necessary
prerequisites installed.

Options:
  -s|--shell      launches interactive shell instead of CI script
  -d|--download   attempt to download it from ghcr.io if image is missing

Available images:
EOF
	docker images --filter='label=io.kaitai.ci=true'
}

# Define default values for parameters
TARGET=""
IMPLEMENTATION=""
OS=linux
ARCH=x86_64
SHELL_FLAG=0
DOWNLOAD_FLAG=0

# Parse command-line options
while [ $# -gt 0 ]; do
	key="$1"

	case "$key" in
	--shell|-s)
		SHELL_FLAG=1
		shift
		;;
	--download|-d)
		DOWNLOAD_FLAG=1
		shift
		;;
	--target|-t)
		TARGET="$2"
		shift 2
		;;
	--implementation|-i)
		IMPLEMENTATION="$2"
		shift 2
		;;
	--os)
		OS="$2"
		shift 2
		;;
	--arch)
		ARCH="$2"
		shift 2
		;;
	--help|-h)
		print_usage
		exit 0
		;;
	*)
		echo "Unknown option: $1"
		print_usage
		exit 1
		;;
	esac
done

if [ -z "$TARGET" ] || [ -z "$IMPLEMENTATION" ] || [ -z "$OS" ] || [ -z "$ARCH" ]; then
    echo "Missing required parameters."
    exit 1
fi

EXTRA_OPTS=
IMG_NAME="kaitai-$TARGET-$IMPLEMENTATION-$OS-$ARCH"

# Check image availability
if docker images -q "$IMG_NAME" | grep -q '[0-9a-f]'; then
	# If locally-built image exists, prioritize that
	IMG_COORD="$IMG_NAME"
elif docker images -q "ghcr.io/kaitai-io/$IMG_NAME" | grep -q '[0-9a-f]'; then
	# If ghcr.io image exists, use it
	IMG_COORD="ghcr.io/kaitai-io/$IMG_NAME"
elif [ "$DOWNLOAD_FLAG" = 1 ]; then
	# No image, but we'll try to download
	IMG_COORD="ghcr.io/kaitai-io/$IMG_NAME"
	docker pull "$IMG_COORD"
else
	echo 'Neither locally-built nor remotely-built image is present. Try using `--download` to try downloading prebuilt image from ghcr.io.'
	exit 2
fi

# If --shell used, invoke /bin/sh
if [ "$SHELL_FLAG" = 1 ]; then
	COMMAND=/bin/sh
	EXTRA_OPTS=-it
else
	COMMAND="./ci-$TARGET"
fi

if [ -n "$GITHUB_ACTIONS" ]; then
	echo "GITHUB_ACTIONS=$GITHUB_ACTIONS"
	echo "GITHUB_RUN_ID=$GITHUB_RUN_ID"
	echo "GITHUB_RUN_NUMBER=$GITHUB_RUN_NUMBER"
	echo "GH_JOB_ID=$GH_JOB_ID"
	echo "GH_HTML_URL=$GH_HTML_URL"
fi

docker run $EXTRA_OPTS \
	--rm \
	-e GITHUB_ACTIONS \
	-e GITHUB_RUN_ID \
	-e GITHUB_RUN_NUMBER \
	-e GH_JOB_ID \
	-e GH_HTML_URL \
	-v "$TESTS_DIR":/tests \
	-v "$TESTS_DIR/../runtime":/runtime \
	-w /tests \
	--network none \
	"$IMG_COORD" \
	"$COMMAND"
