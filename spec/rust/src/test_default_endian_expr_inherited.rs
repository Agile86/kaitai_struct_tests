// Autogenerated from KST: please remove this line if doing any edits by hand!

extern crate kaitai_struct;
extern crate kaitai_rust;

use kaitai_struct::KaitaiStruct;
use rust::DefaultEndianExprInherited;

#[test]
fn test_default_endian_expr_inherited() {
    if let Ok(r) = DefaultEndianExprInherited::from_file("src/endian_expr.bin") {

        assert_eq!(r.docs[0 as usize].indicator, &[0x49, 0x49]);
        assert_eq!(r.docs[0 as usize].main.insides.some_int, 66);
        assert_eq!(r.docs[0 as usize].main.insides.more.some_int1, 16896);
        assert_eq!(r.docs[0 as usize].main.insides.more.some_int2, 66);
        assert_eq!(r.docs[0 as usize].main.insides.more.some_inst, 66);
        assert_eq!(r.docs[1 as usize].indicator, &[0x4d, 0x4d]);
        assert_eq!(r.docs[1 as usize].main.insides.some_int, 66);
        assert_eq!(r.docs[1 as usize].main.insides.more.some_int1, 66);
        assert_eq!(r.docs[1 as usize].main.insides.more.some_int2, 16896);
        assert_eq!(r.docs[1 as usize].main.insides.more.some_inst, 1107296256);
        assert_eq!(r.docs[2 as usize].indicator, &[0x58, 0x58]);
        assert_eq!(r.docs[2 as usize].main.insides.some_int, 66);
        assert_eq!(r.docs[2 as usize].main.insides.more.some_int1, 66);
        assert_eq!(r.docs[2 as usize].main.insides.more.some_int2, 16896);
        assert_eq!(r.docs[2 as usize].main.insides.more.some_inst, 1107296256);
    }
}
