// Autogenerated from KST: please remove this line if doing any edits by hand!

#![allow(unused_variables)]
#![allow(unused_assignments)]
#![allow(overflowing_literals)]
use std::fs;
extern crate kaitai;
use self::kaitai::*;
use rust::formats::bits_signed_res_b32_le::*;

#[test]
fn test_bits_signed_res_b32_le() {
    let bytes = fs::read("../../src/bits_shift_by_b32_le.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let res: KResult<OptRc<BitsSignedResB32Le>> = BitsSignedResB32Le::read_into(&_io, None, None);
    let r : OptRc<BitsSignedResB32Le>;

    if let Err(err) = res {
        panic!("{:?}", err);
    } else {
        r = res.unwrap();
    }

    assert_eq!(*r.a(), 4294967295);
}
