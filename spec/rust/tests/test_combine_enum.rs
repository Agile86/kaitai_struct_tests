// Autogenerated from KST: please remove this line if doing any edits by hand!

#![allow(unused_variables)]
#![allow(unused_assignments)]
#![allow(overflowing_literals)]
use std::fs;
extern crate kaitai;
use self::kaitai::*;
use rust::formats::combine_enum::*;

#[test]
fn test_combine_enum() {
    let bytes = fs::read("../../src/enum_0.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let res: KResult<OptRc<CombineEnum>> = CombineEnum::read_into(&_io, None, None);
    let r : OptRc<CombineEnum>;

    if let Err(err) = res {
        panic!("{:?}", err);
    } else {
        r = res.unwrap();
    }

    assert_eq!(*r.enum_u4(), CombineEnum_Animal::Pig);
    assert_eq!(*r.enum_u2(), CombineEnum_Animal::Horse);
    assert_eq!(*r.enum_u4_u2().expect("error reading"), CombineEnum_Animal::Horse);
}
