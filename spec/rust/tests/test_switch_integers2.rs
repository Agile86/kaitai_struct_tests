// Autogenerated from KST: please remove this line if doing any edits by hand!

#![allow(unused_variables)]
#![allow(unused_assignments)]
#![allow(overflowing_literals)]
use std::fs;
extern crate kaitai;
use self::kaitai::*;
#[path = "../formats/mod.rs"] mod formats;
use formats::switch_integers2::*;

#[test]
fn test_switch_integers2() {
    let bytes = fs::read("../../src/switch_integers.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let res: KResult<OptRc<SwitchIntegers2>> = SwitchIntegers2::read_into(&_io, None, None);
    let r : OptRc<SwitchIntegers2>;

    if let Err(err) = res {
        panic!("{:?}", err);
    } else {
        r = res.unwrap();
    }

    assert_eq!(*r.code(), 1);
    assert_eq!(r.len(), 7);
    assert_eq!(*r.ham(), vec![0x2u8, 0x40u8, 0x40u8, 0x4u8, 0x37u8, 0x13u8, 0x0u8]);
    assert_eq!(*r.padding(), 0);
    assert_eq!(*r.len_mod_str().expect("error reading"), "13");
}
