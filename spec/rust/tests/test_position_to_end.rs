// Autogenerated from KST: please remove this line if doing any edits by hand!

#![allow(unused_variables)]
#![allow(unused_assignments)]
#![allow(overflowing_literals)]
use std::fs;
extern crate kaitai;
use self::kaitai::*;
#[path = "../formats/mod.rs"] mod formats;
use formats::position_to_end::*;

#[test]
fn test_position_to_end() {
    let bytes = fs::read("../../src/position_to_end.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let res: KResult<OptRc<PositionToEnd>> = PositionToEnd::read_into(&_io, None, None);
    let r : OptRc<PositionToEnd>;

    if let Err(err) = res {
        panic!("{:?}", err);
    } else {
        r = res.unwrap();
    }

    assert_eq!(*r.index().expect("error reading").foo(), 66);
    assert_eq!(*r.index().expect("error reading").bar(), 4660);
}
