// Autogenerated from KST: please remove this line if doing any edits by hand!

#![allow(unused_variables)]
#![allow(unused_assignments)]
#![allow(overflowing_literals)]
use std::fs;
extern crate kaitai;
use self::kaitai::*;
#[path = "../formats/mod.rs"] mod formats;
use formats::process_repeat_usertype::*;

#[test]
fn test_process_repeat_usertype() {
    let bytes = fs::read("../../src/process_xor_4.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let res: KResult<OptRc<ProcessRepeatUsertype>> = ProcessRepeatUsertype::read_into(&_io, None, None);
    let r : OptRc<ProcessRepeatUsertype>;

    if let Err(err) = res {
        panic!("{:?}", err);
    } else {
        r = res.unwrap();
    }

    assert_eq!(*r.blocks()[0 as usize].a(), -1975704206);
    assert_eq!(*r.blocks()[0 as usize].b(), 20);
    assert_eq!(*r.blocks()[1 as usize].a(), 279597642);
    assert_eq!(*r.blocks()[1 as usize].b(), 68);
}
