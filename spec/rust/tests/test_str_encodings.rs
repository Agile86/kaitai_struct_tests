// Autogenerated from KST: please remove this line if doing any edits by hand!

#![allow(unused_variables)]
#![allow(unused_assignments)]
#![allow(overflowing_literals)]
use std::fs;
extern crate kaitai;
use self::kaitai::*;
use rust::formats::str_encodings::*;

#[test]
fn test_str_encodings() {
    let bytes = fs::read("../../src/str_encodings.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let res: KResult<OptRc<StrEncodings>> = StrEncodings::read_into(&_io, None, None);
    let r : OptRc<StrEncodings>;

    if let Err(err) = res {
        panic!("{:?}", err);
    } else {
        r = res.unwrap();
    }

    assert_eq!(*r.str1(), "Some ASCII");
    assert_eq!(*r.str2(), "\u{3053}\u{3093}\u{306b}\u{3061}\u{306f}");
    assert_eq!(*r.str3(), "\u{3053}\u{3093}\u{306b}\u{3061}\u{306f}");
    assert_eq!(*r.str4(), "\u{2591}\u{2592}\u{2593}");
}
