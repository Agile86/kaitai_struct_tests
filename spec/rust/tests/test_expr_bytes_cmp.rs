// Autogenerated from KST: please remove this line if doing any edits by hand!

use std::fs;

extern crate kaitai;
use self::kaitai::*;
mod formats;
use formats::expr_bytes_cmp::*;

#[test]
fn test_expr_bytes_cmp() {
    let bytes = fs::read("../../src/fixed_struct.bin").unwrap();
    let reader = BytesReader::new(&bytes);
    let mut r = ExprBytesCmp::default();

    if let Err(err) = r.read(&reader, None, Some(KStructUnit::parent_stack())) {

        panic!("{:?}", err);
    }
    assert_eq!(r.one(), &[0x50u8].to_vec());
    assert_eq!(r.two(), &[0x41u8, 0x43u8, 0x4bu8].to_vec());
    assert_eq!(*r.is_eq(&reader).unwrap(), true);
    assert_eq!(*r.is_ne(&reader).unwrap(), false);
    assert_eq!(*r.is_lt(&reader).unwrap(), true);
    assert_eq!(*r.is_gt(&reader).unwrap(), false);
    assert_eq!(*r.is_le(&reader).unwrap(), true);
    assert_eq!(*r.is_ge(&reader).unwrap(), false);
    assert_eq!(*r.is_lt2(&reader).unwrap(), false);
    assert_eq!(*r.is_gt2(&reader).unwrap(), true);
}
