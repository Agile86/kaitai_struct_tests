// Autogenerated from KST: please remove this line if doing any edits by hand!

#![allow(unused_variables)]
#![allow(unused_assignments)]
#![allow(overflowing_literals)]
use std::fs;
extern crate kaitai;
use self::kaitai::*;
#[path = "../formats/mod.rs"] mod formats;
use formats::bits_unaligned_b32_be::*;

#[test]
fn test_bits_unaligned_b32_be() {
    let bytes = fs::read("../../src/process_xor_4.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let res: KResult<OptRc<BitsUnalignedB32Be>> = BitsUnalignedB32Be::read_into(&_io, None, None);
    let r : OptRc<BitsUnalignedB32Be>;

    if let Err(err) = res {
        panic!("{:?}", err);
    } else {
        r = res.unwrap();
    }

    assert_eq!(*r.a(), true);
    assert_eq!(*r.b(), 3648472617);
    assert_eq!(*r.c(), 10);
}
