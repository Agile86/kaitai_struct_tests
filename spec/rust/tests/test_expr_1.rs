// Autogenerated from KST: please remove this line if doing any edits by hand!

#![allow(unused_variables)]
#![allow(unused_assignments)]
#![allow(overflowing_literals)]
use std::fs;
extern crate kaitai;
use self::kaitai::*;
#[path = "../formats/mod.rs"] mod formats;
use formats::expr_1::*;

#[test]
fn test_expr_1() {
    let bytes = fs::read("../../src/str_encodings.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let res: KResult<OptRc<Expr1>> = Expr1::read_into(&_io, None, None);
    let r : OptRc<Expr1>;

    if let Err(err) = res {
        panic!("{:?}", err);
    } else {
        r = res.unwrap();
    }

    assert_eq!(*r.len_of_1(), 10);
    assert_eq!(*r.len_of_1_mod().expect("error reading"), 8);
    assert_eq!(*r.str1(), "Some ASC");
    assert_eq!(*r.str1_len().expect("error reading"), 8);
}
