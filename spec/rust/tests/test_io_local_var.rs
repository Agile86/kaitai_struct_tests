// Autogenerated from KST: please remove this line if doing any edits by hand!

#![allow(unused_variables)]
#![allow(unused_assignments)]
#![allow(overflowing_literals)]
use std::fs;
extern crate kaitai;
use self::kaitai::*;
#[path = "../formats/mod.rs"] mod formats;
use formats::io_local_var::*;

#[test]
fn test_io_local_var() {
    let bytes = fs::read("../../src/full256.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let res: KResult<OptRc<IoLocalVar>> = IoLocalVar::read_into(&_io, None, None);
    let r : OptRc<IoLocalVar>;

    if let Err(err) = res {
        panic!("{:?}", err);
    } else {
        r = res.unwrap();
    }

    assert_eq!(*r.skip(), vec![0x0u8, 0x1u8, 0x2u8, 0x3u8, 0x4u8, 0x5u8, 0x6u8, 0x7u8, 0x8u8, 0x9u8, 0xau8, 0xbu8, 0xcu8, 0xdu8, 0xeu8, 0xfu8, 0x10u8, 0x11u8, 0x12u8, 0x13u8]);
    assert_eq!(*r.followup(), 20);
}
