// Autogenerated from KST: please remove this line if doing any edits by hand!

use std::fs;

extern crate kaitai;
use self::kaitai::*;
mod formats;
use formats::float_to_i::*;

#[test]
fn test_float_to_i() {
    let bytes = fs::read("../../src/floating_points.bin").unwrap();
    let reader = BytesReader::new(&bytes);
    let mut r = FloatToI::default();

    if let Err(err) = r.read(&reader, None, Some(KStructUnit::parent_stack())) {

        panic!("{:?}", err);
    }
    assert_eq!(*r.single_value(), 0.5);
    assert_eq!(*r.double_value(), 0.25);
    assert_eq!(*r.single_i(&reader).unwrap(), 0);
    assert_eq!(*r.double_i(&reader).unwrap(), 0);
    assert_eq!(*r.float1_i(&reader).unwrap(), 1);
    assert_eq!(*r.float2_i(&reader).unwrap(), 1);
    assert_eq!(*r.float3_i(&reader).unwrap(), 1);
    assert_eq!(*r.float4_i(&reader).unwrap(), -2);
}
