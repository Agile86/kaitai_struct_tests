// Autogenerated from KST: please remove this line if doing any edits by hand!

use std::fs;

extern crate kaitai;
use self::kaitai::*;
mod formats;
use formats::expr_3::*;

#[test]
fn test_expr_3() {
    let bytes = fs::read("../../src/fixed_struct.bin").unwrap();
    let reader = BytesReader::new(&bytes);
    let mut r = Expr3::default();

    if let Err(err) = r.read(&reader, None, Some(KStructUnit::parent_stack())) {

        panic!("{:?}", err);
    }
    assert_eq!(*r.one(), 80);
    assert_eq!(*r.two(), "ACK");
    assert_eq!(*r.three(&reader).unwrap(), "@ACK");
    assert_eq!(*r.four(&reader).unwrap(), "_ACK_");
    assert_eq!(*r.is_str_eq(&reader).unwrap(), true);
    assert_eq!(*r.is_str_ne(&reader).unwrap(), false);
    assert_eq!(*r.is_str_lt(&reader).unwrap(), true);
    assert_eq!(*r.is_str_gt(&reader).unwrap(), false);
    assert_eq!(*r.is_str_le(&reader).unwrap(), true);
    assert_eq!(*r.is_str_ge(&reader).unwrap(), false);
    assert_eq!(*r.is_str_lt2(&reader).unwrap(), true);
    assert_eq!(*r.test_not(&reader).unwrap(), true);
}
