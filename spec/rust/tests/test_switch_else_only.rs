// Autogenerated from KST: please remove this line if doing any edits by hand!

#![allow(unused_variables)]
#![allow(unused_assignments)]
#![allow(overflowing_literals)]
use std::fs;
extern crate kaitai;
use self::kaitai::*;
use rust::formats::switch_else_only::*;

#[test]
fn test_switch_else_only() {
    let bytes = fs::read("../../src/switch_opcodes.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let res: KResult<OptRc<SwitchElseOnly>> = SwitchElseOnly::read_into(&_io, None, None);
    let r : OptRc<SwitchElseOnly>;

    if let Err(err) = res {
        panic!("{:?}", err);
    } else {
        r = res.unwrap();
    }

    assert_eq!(*r.opcode(), 83);
    assert_eq!(r.prim_byte(), 102);
    assert_eq!(*r.ut().as_ref().unwrap().value(), vec![0x72u8, 0x0u8, 0x49u8, 0x42u8]);
}
