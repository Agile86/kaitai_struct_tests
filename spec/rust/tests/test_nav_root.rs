// Autogenerated from KST: please remove this line if doing any edits by hand!

#![allow(unused_variables)]
#![allow(unused_assignments)]
#![allow(overflowing_literals)]
use std::fs;
extern crate kaitai;
use self::kaitai::*;
use rust::formats::nav_root::*;

#[test]
fn test_nav_root() {
    let bytes = fs::read("../../src/nav.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let res: KResult<OptRc<NavRoot>> = NavRoot::read_into(&_io, None, None);
    let r : OptRc<NavRoot>;

    if let Err(err) = res {
        panic!("{:?}", err);
    } else {
        r = res.unwrap();
    }

    assert_eq!(*r.header().qty_entries(), 2);
    assert_eq!(*r.header().filename_len(), 8);
    assert_eq!(r.index().entries().len(), 2);
    assert_eq!(*r.index().entries()[0 as usize].filename(), "FIRST___");
    assert_eq!(*r.index().entries()[1 as usize].filename(), "SECOND__");
}
