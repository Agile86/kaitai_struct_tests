// Autogenerated from KST: please remove this line if doing any edits by hand!

#![allow(unused_variables)]
#![allow(unused_assignments)]
#![allow(overflowing_literals)]
use std::fs;
extern crate kaitai;
use self::kaitai::*;
#[path = "../formats/mod.rs"] mod formats;
use formats::process_xor4_const::*;

#[test]
fn test_process_xor4_const() {
    let bytes = fs::read("../../src/process_xor_4.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let res: KResult<OptRc<ProcessXor4Const>> = ProcessXor4Const::read_into(&_io, None, None);
    let r : OptRc<ProcessXor4Const>;

    if let Err(err) = res {
        panic!("{:?}", err);
    } else {
        r = res.unwrap();
    }

    assert_eq!(*r.key(), vec![0xecu8, 0xbbu8, 0xa3u8, 0x14u8]);
    assert_eq!(*r.buf(), vec![0x66u8, 0x6fu8, 0x6fu8, 0x20u8, 0x62u8, 0x61u8, 0x72u8]);
}
