// Autogenerated from KST: please remove this line if doing any edits by hand!

use std::fs;

extern crate kaitai;
use self::kaitai::*;
mod formats;
use formats::floating_points::*;

#[test]
fn test_floating_points() {
    let bytes = fs::read("../../src/floating_points.bin").unwrap();
    let reader = BytesReader::new(&bytes);
    let mut r = FloatingPoints::default();

    if let Err(err) = r.read(&reader, None, Some(KStructUnit::parent_stack())) {

        panic!("{:?}", err);
    }
    assert_eq!(*r.single_value(), 0.5);
    assert_eq!(*r.single_value_be(), 0.5);
    assert_eq!(*r.double_value(), 0.25);
    assert_eq!(*r.double_value_be(), 0.25);
    assert_eq!(*r.approximate_value(), 1.2345);
    assert_eq!(*r.single_value_plus_int(&reader).unwrap(), 1.5);
    assert_eq!(*r.single_value_plus_float(&reader).unwrap(), 1.0);
    assert_eq!(*r.double_value_plus_float(&reader).unwrap(), 0.3);
}
