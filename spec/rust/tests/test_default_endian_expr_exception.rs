// Autogenerated from KST: please remove this line if doing any edits by hand!

#![allow(unused_variables)]
#![allow(unused_assignments)]
#![allow(overflowing_literals)]
use std::fs;
extern crate kaitai;
use self::kaitai::*;
#[path = "../formats/mod.rs"] mod formats;
use formats::default_endian_expr_exception::*;

#[test]
fn test_default_endian_expr_exception() {
    let bytes = fs::read("../../src/endian_expr.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let res: KResult<OptRc<DefaultEndianExprException>> = DefaultEndianExprException::read_into(&_io, None, None);
    let r : OptRc<DefaultEndianExprException>;

    if let Err(err) = res {
        println!("expected err: {:?}, exception: UndecidedEndiannessError", err);
    } else {
        panic!("no expected exception: UndecidedEndiannessError");
    }
}
